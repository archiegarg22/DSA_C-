long long getTrappedWater(long long* arr, int n) {
    // Write your code here.

    vector<long long> leftMax(n);
    vector<long long> rightMax(n);
    long long trappedWater = 0;

    // Fill leftMax array
    leftMax[0] = arr[0];
    for (int i = 1; i < n; i++) {
        leftMax[i] = max(leftMax[i - 1], arr[i]);
    }

    // Fill rightMax array
    rightMax[n - 1] = arr[n - 1];
    for (int i = n - 2; i >= 0; i--) {
        rightMax[i] = max(rightMax[i + 1], arr[i]);
    }

    // Calculate trapped water
    for (int i = 0; i < n; ++i) {
        trappedWater += min(leftMax[i], rightMax[i]) - arr[i];
    }

    return trappedWater;
}
